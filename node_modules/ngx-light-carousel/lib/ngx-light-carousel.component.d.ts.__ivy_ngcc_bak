import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, QueryList, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import { ngxLightAutoplay, ngxLightOptions } from './ngx-light-carousel.model';
export declare class NgxCarouselComponent implements AfterViewInit, OnChanges, OnInit, OnDestroy {
    private platformId;
    private _renderer;
    private zone;
    private cd;
    sliderElement: ElementRef;
    btnPrevElement: ElementRef;
    btnNextElement: ElementRef;
    progressContainerElement: ElementRef;
    carouselItems: QueryList<ElementRef>;
    contentPrev: TemplateRef<any>;
    contentNext: TemplateRef<any>;
    dotElm: TemplateRef<any>;
    progressElm: TemplateRef<any>;
    infiniteContainer: ViewContainerRef;
    contentContent: TemplateRef<any>;
    current: number;
    currentChange: EventEmitter<number>;
    data: any[];
    options: ngxLightOptions;
    private infiniteElmRefs;
    private timeLeft;
    private interval;
    private actionDelay;
    dots: number[];
    dotsLoading: boolean;
    loading: boolean;
    grabbing: boolean;
    throttleSub: Observable<any>;
    subRef: Subscription;
    arrowsVisible: boolean;
    carouselItemWidthVar: number;
    constructor(platformId: Object, _renderer: Renderer2, zone: NgZone, cd: ChangeDetectorRef);
    click(fn: any): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    onResize(): void;
    sufficientSlides(): boolean;
    showArrows(state: boolean): void;
    rootElmWidth(): any;
    carouselItemWidth(): number;
    currentBreakpoint(): import("./ngx-light-carousel.model").ngxLightBreakpoint;
    elements(): {
        rootElement: any;
        containerElement: HTMLElement;
        carouselItems: any[];
    };
    private setViewWidth;
    hover(): void;
    unhover(): void;
    private calculateDots;
    addPanningClass: () => void;
    removePanningClass: () => void;
    addAnimationClass: () => void;
    removeAnimationClass: () => void;
    panTo: (value: number) => void;
    currentIndex: (number?: number) => number;
    slowOnOutOfBounds: (e: any) => any;
    scrollBackToEdge: () => void;
    outOfBound: () => boolean;
    detectSwipingLeft: (e: any) => boolean;
    detectSwipingRight: (e: any) => boolean;
    detectPanningLeft: (e: any) => boolean;
    detectPanningRight: (e: any) => boolean;
    visibleElements(): number;
    nextSlide: () => void;
    prevSlide: () => void;
    addInfiniteElm(): void;
    private infiniteHandler;
    startTimer: () => void;
    pauseTimer: () => void;
    scrollToIndex(number: any): void;
    goToIndex: (number: any) => void;
    infiniteMode(): boolean;
    autoplayMode(): false | ngxLightAutoplay;
    calculateMoved: (e: any) => number;
    moveIndex(move: number): number;
    init(): void;
}
