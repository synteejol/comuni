{"version":3,"file":"ngx-hm-carousel.js","sources":["ng://ngx-hm-carousel/lib/ngx-hm-carousel-item.directive.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel-dynamic.directive.ts","ng://ngx-hm-carousel/lib/rxjs.observable.resize.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.component.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.module.ts","ng://ngx-hm-carousel/public-api.ts","ng://ngx-hm-carousel/ngx-hm-carousel.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-hm-carousel-item]',\n})\nexport class NgxHmCarouselItemDirective {\n  constructor() {}\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n// TODO: ssr problem should not hide on ssr\n// TODO: show number change should recaculate is show and init show number\n@Directive({\n  selector: '[ngxHmCarouselDynamic]',\n})\nexport class NgxHmCarouselDynamicDirective implements OnInit {\n  @Input('ngxHmCarouselDynamic') index: number;\n  @Input('ngxHmCarouselDynamicLength') length: number;\n  @Input('ngxHmCarouselDynamicShow') show = 1;\n  @Input('ngxHmCarouselDynamicIndex')\n  set currentI(value: number) {\n    if (!this.compelete) {\n      const nextI = value + this.show;\n      const prevI = value - this.show;\n      if (\n        this.index === 0 ||\n        this.index === this.length - 1 ||\n        this.index === nextI ||\n        this.index === prevI ||\n        this.index === value\n      ) {\n        this._view.createEmbeddedView(this._template);\n        this.compelete = true;\n      }\n    }\n  }\n\n  private compelete = false;\n\n  constructor(\n    private _view: ViewContainerRef,\n    private _template: TemplateRef<any>,\n  ) {\n    this._view.clear();\n  }\n\n  ngOnInit(): void {}\n}\n","import ResizeObserver from 'resize-observer-polyfill';\nimport { Observable, Subscriber } from 'rxjs';\nimport { debounceTime, tap, finalize } from 'rxjs/operators';\n\n/**\n * An observable creator for element resize.\n * @param elm the watch element.\n * @param cb when resize complete, call back function.\n * @param time resize emit time, default is 200\n */\nexport function resizeObservable(\n  elm: HTMLElement,\n  cb: () => void,\n  time = 200,\n): Observable<any> {\n  let elmObserve$: ResizeObserver;\n  return new Observable((observer: Subscriber<any>) => {\n    elmObserve$ = new ResizeObserver((entries, obs) => {\n      observer.next(elmObserve$);\n    });\n    elmObserve$.observe(elm);\n  }).pipe(\n    debounceTime(time),\n    tap(() => {\n      cb();\n    }),\n    finalize(() => {\n      elmObserve$.unobserve(elm);\n      elmObserve$.disconnect();\n    }),\n  );\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EmbeddedViewRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  forkJoin,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport { bufferCount, filter, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\nimport { NgxHmCarouselBreakPointUp } from './ngx-hm-carousel.model';\nimport { resizeObservable } from './rxjs.observable.resize';\n\n@Component({\n  selector: 'ngx-hm-carousel',\n  templateUrl: './ngx-hm-carousel.component.html',\n  styleUrls: ['./ngx-hm-carousel.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxHmCarouselComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxHmCarouselComponent\n  implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('containerElm') container: ElementRef;\n  @ViewChild('prev') btnPrev: ElementRef;\n  @ViewChild('next') btnNext: ElementRef;\n  @ViewChild('progress') progressContainerElm: ElementRef;\n\n  // get all item elms\n  @ContentChildren(NgxHmCarouselItemDirective, {\n    read: ElementRef,\n    descendants: true,\n  })\n  itemElms: QueryList<ElementRef>;\n\n  @ContentChild('carouselPrev') contentPrev: TemplateRef<any>;\n  @ContentChild('carouselNext') contentNext: TemplateRef<any>;\n  @ContentChild('carouselDot') dotElm: TemplateRef<any>;\n  @ContentChild('carouselProgress') progressElm: TemplateRef<any>;\n\n  @ContentChild('infiniteContainer', { read: ViewContainerRef })\n  infiniteContainer: ViewContainerRef;\n\n  @ContentChild('carouselContent') contentContent: TemplateRef<any>;\n\n  /** the data you using with *ngFor, it need when infinite mode or autoplay mode */\n  @Input() data: any[];\n  /** when infinite is true, the animation time with item, default is 400. */\n  @Input() aniTime = 400;\n  /** this class will add in #containerElm when model change */\n  @Input() aniClass = 'transition';\n\n  /** this class will add when carousel auto play,\n   * this default autoplay animation is same as aniClass\n   */\n  @Input() aniClassAuto = this.aniClass;\n\n  /**\n   * user move picture with the container width rate,\n   * when more than that rate, it will go to next or prev,\n   * set false will never move with distance rate,\n   * default is `0.15`\n   */\n  @Input('pan-boundary') panBoundary: number | false = 0.15;\n\n  /** when show-num is bigger than 1, the first item align, defaulte is `center` */\n  @Input() align: 'left' | 'center' | 'right' = 'center';\n\n  /**\n   * disable when drag occur the child element will follow touch point.\n   * default is `false`\n   */\n  @Input('not-follow-pan') notDrag = false;\n\n  /**\n   * the event binding state for stop auto play when mourse moveover\n   */\n  @Input('mourse-enable') mourseEnable = false;\n  /** each auto play between time */\n  @Input('between-delay') delay = 8000;\n  /** auto play direction, default is `right`. */\n  @Input('autoplay-direction') direction: 'left' | 'right' = 'right';\n  /** how many number with each scroll, default is `1`. */\n  @Input('scroll-num') scrollNum = 1;\n  /** Could user scroll many item once, simulate with scrollbar, default is `false` */\n  @Input('drag-many') isDragMany = false;\n  /** Minimal velocity required before recognizing, unit is in px per ms, default `0.3` */\n  @Input('swipe-velocity') swipeVelocity = 0.3;\n\n  /**\n   * switch show number with custom logic like css @media (min-width: `number`px)\n   */\n  @Input() breakpoint: NgxHmCarouselBreakPointUp[] = [];\n\n  /** disable drag event with touch and mouse pan moving, default is `false` */\n  @Input('disable-drag')\n  get disableDrag() {\n    return this._disableDrag;\n  }\n  set disableDrag(value) {\n    if (this.rootElm) {\n      if (this._disableDrag !== value) {\n        if (value) {\n          this.destoryHammer();\n        } else {\n          this.hammer = this.bindHammer();\n        }\n      }\n    }\n    this._disableDrag = value;\n  }\n\n  /** is the carousel can move infinite */\n  @Input('infinite')\n  get infinite() {\n    return this._infinite;\n  }\n  set infinite(value) {\n    this._infinite = value;\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.addStyle(ref.rootNodes[0], {\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n    });\n  }\n\n  /** auto play speed */\n  @Input('autoplay-speed')\n  get speed() {\n    return this.speedChange.value;\n  }\n  set speed(value) {\n    this._zone.runOutsideAngular(() => {\n      this.speedChange.next(value);\n    });\n  }\n\n  /**\n   * how many number items to show once, default is `1`\n   * set `auto` to using `[breakpoint]` set value.\n   */\n  @Input('show-num')\n  get showNum() {\n    return this._showNum;\n  }\n  set showNum(value: number | 'auto') {\n    if (value === 'auto') {\n      this.isAutoNum = true;\n    } else {\n      this._showNum = +value;\n      if (this.rootElm) {\n        this.setViewWidth();\n        this.reSetAlignDistance();\n      }\n    }\n  }\n\n  /** carousel auto play confing */\n  @Input('autoplay')\n  get autoplay() {\n    return this._autoplay;\n  }\n  set autoplay(value) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.elms) {\n        this.progressWidth = 0;\n        if (value) {\n          this._zone.runOutsideAngular(() => {\n            this.doNextSub$ = this.doNext.subscribe();\n          });\n        } else {\n          if (this.doNextSub$) {\n            this.doNextSub$.unsubscribe();\n          }\n        }\n      }\n    }\n    this._autoplay = value;\n    // if set autoplay, then the infinite is true\n    if (value) {\n      this._tmpInfinite = this.infinite;\n      this.infinite = true;\n    } else {\n      this.infinite = this._tmpInfinite;\n    }\n  }\n\n  get currentIndex() {\n    return this._currentIndex;\n  }\n  set currentIndex(value) {\n    // if now index if not equale to save index, do someting\n    if (this.currentIndex !== value) {\n      // if the value is not contain with the boundary not handler\n      if (!this.runLoop && !(0 <= value && value <= this.itemElms.length - 1)) {\n        return;\n      }\n      this._currentIndex = value;\n      if (this.elms) {\n        if (this.autoplay && !this.isFromAuto) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n            this.callRestart();\n          });\n        }\n        this.drawView(this.currentIndex, this.hasInitWriteValue);\n        if (this.isDragMany) {\n          this.hasInitWriteValue = true;\n        }\n      }\n      if (\n        0 <= this.currentIndex &&\n        this.currentIndex <= this.itemElms.length - 1\n      ) {\n        this._zone.run(() => {\n          this.onChange(this.currentIndex);\n          this._cd.detectChanges();\n        });\n      }\n    }\n    this.isFromAuto = false;\n  }\n\n  get progressWidth() {\n    return this._porgressWidth;\n  }\n  set progressWidth(value) {\n    if (this.progressElm !== undefined && this.autoplay) {\n      this._porgressWidth = value;\n      this._renderer.setStyle(\n        (this.progressContainerElm.nativeElement as HTMLElement).children[0],\n        'width',\n        `${this.progressWidth}%`,\n      );\n    }\n  }\n\n  get grabbing() {\n    return this._grabbing;\n  }\n  set grabbing(value: boolean) {\n    if (this._grabbing !== value) {\n      // console.log(value);\n      this._zone.run(() => {\n        this._grabbing = value;\n        if (value) {\n          this._renderer.addClass(this.containerElm, 'grabbing');\n        } else {\n          this.panCount = 0;\n          this.callRestart();\n          this._renderer.removeClass(this.containerElm, 'grabbing');\n        }\n        this._cd.detectChanges();\n      });\n    }\n  }\n\n  // using for check mouse or touchend\n  leaveObs$ = merge(\n    fromEvent(this._document, 'mouseup'),\n    fromEvent(this._document, 'touchend'),\n  ).pipe(\n    tap((e: Event) => {\n      this.grabbing = false;\n      e.stopPropagation();\n      e.preventDefault();\n    }),\n  );\n\n  private set left(value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}px)`,\n      );\n    } else {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}%)`,\n      );\n    }\n  }\n\n  private get maxRightIndex() {\n    let addIndex = 0;\n    switch (this.align) {\n      case 'left':\n        addIndex = 0;\n        break;\n      case 'center':\n        addIndex = (this.showNum as number) - 1;\n        break;\n      case 'right':\n        addIndex = (this.showNum as number) - 1;\n        break;\n    }\n    return this.itemElms.length - 1 - this._showNum + 1 + addIndex;\n  }\n\n  private get runLoop() {\n    return this.autoplay || this.infinite;\n  }\n  private get lengthOne() {\n    return this.itemElms.length === 1;\n  }\n\n  private get rootElmWidth() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().width\n      : 100;\n  }\n\n  private set containerElmWidth(value: number) {\n    this.setStyle(this.containerElm, 'width', value);\n  }\n\n  private isFromAuto = true;\n  private isAutoNum = false;\n  private mouseOnContainer = false;\n  private alignDistance = 0;\n  private elmWidth = 0;\n\n  private rootElm: HTMLElement;\n  private containerElm: HTMLElement;\n\n  private elms: Array<HTMLElement>;\n  private infiniteElmRefs: Array<EmbeddedViewRef<any>> = [];\n\n  private hammer: HammerManager;\n\n  private saveTimeOut: Subscription;\n  private doNextSub$: Subscription;\n  private doNext: Observable<any>;\n\n  private restart = new BehaviorSubject<any>(null);\n  private speedChange = new BehaviorSubject(5000);\n  private stopEvent = new Subject<any>();\n  private destroy$ = new Subject<any>();\n\n  private _porgressWidth = 0;\n  private _currentIndex = 0;\n  private _showNum = 1;\n  private _autoplay = false;\n  private _infinite = false;\n  private _tmpInfinite = false;\n  private _grabbing = false;\n  private _disableDrag = false;\n\n  private panCount = 0;\n\n  // this variable use for check the init value is write with ngModel,\n  // when init first, not set with animation\n  private hasInitWriteValue = false;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) private _document,\n    private _renderer: Renderer2,\n    private _zone: NgZone,\n    private _cd: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit() {\n    this.rootElm = this.container.nativeElement;\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\n\n    this.init();\n\n    forkJoin([\n      this.bindClick(),\n      // when item changed, remove old hammer binding, and reset width\n      this.itemElms.changes.pipe(\n        // detectChanges to change view dots\n        tap(() => {\n          if (this.currentIndex > this.itemElms.length - 1) {\n            // i can't pass the changedetection check, only the way to using timeout. :(\n            setTimeout(() => {\n              this.currentIndex = this.itemElms.length - 1;\n            }, 0);\n          }\n          this.destroy();\n          this.removeInfiniteElm();\n          this.init();\n          this.progressWidth = 0;\n        }),\n        tap(() => this._cd.detectChanges()),\n      ),\n      resizeObservable(this.rootElm, () => this.containerResize()),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  writeValue(value: any) {\n    if (value || value === 0) {\n      this.currentIndex = value;\n      this.hasInitWriteValue = true;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => any) {\n    this.onTouched = fn;\n  }\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  private init() {\n    this.initVariable();\n    this.setViewWidth(true);\n    this.reSetAlignDistance();\n    if (!this.disableDrag) {\n      this.hammer = this.bindHammer();\n    }\n    this.drawView(this.currentIndex, false);\n    if (isPlatformBrowser(this.platformId) && this.runLoop) {\n      this.addInfiniteElm();\n    }\n  }\n\n  private destroy() {\n    this.destoryHammer();\n\n    if (this.autoplay) {\n      this.doNextSub$.unsubscribe();\n    }\n  }\n\n  private destoryHammer() {\n    if (this.hammer) {\n      this.hammer.destroy();\n    }\n  }\n\n  private addInfiniteElm() {\n    for (let i = 1; i <= this.showNum; i++) {\n      const elm = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[this.itemElms.length - i],\n          index: this.itemElms.length - i,\n        },\n      );\n      this.addStyle(elm.rootNodes[0], {\n        position: 'absolute',\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        transform: `translateX(-${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm.rootNodes[0], 'width', this.elmWidth);\n\n      const elm2 = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[i - 1],\n          index: i - 1,\n        },\n      );\n      this.addStyle(elm2.rootNodes[0], {\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        transform: `translateX(${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm2.rootNodes[0], 'width', this.elmWidth);\n\n      elm.detectChanges();\n      elm2.detectChanges();\n\n      this.infiniteElmRefs.push(elm);\n      this.infiniteElmRefs.push(elm2);\n    }\n  }\n\n  private removeInfiniteElm() {\n    this.infiniteElmRefs.forEach((a) => {\n      a.detach();\n      a.destroy();\n    });\n    if (this.infiniteContainer) {\n      this.infiniteContainer.clear();\n    }\n    this.infiniteElmRefs = [];\n  }\n\n  private containerResize() {\n    this.setViewWidth();\n    this.reSetAlignDistance();\n\n    // 因為不能滑了，所以要回到第一個，以確保全部都有顯示\n    if (this.align !== 'center' && this.showNum >= this.elms.length) {\n      this.currentIndex = 0;\n    }\n    this.drawView(this.currentIndex, false);\n  }\n\n  private initVariable() {\n    this._zone.runOutsideAngular(() => {\n      this.elms = this.itemElms.toArray().map((x) => x.nativeElement);\n\n      let startEvent = this.restart.asObservable();\n      let stopEvent = this.stopEvent.asObservable();\n      if (this.mourseEnable) {\n        startEvent = merge(\n          startEvent,\n          fromEvent(this.containerElm, 'mouseleave').pipe(\n            // when leave, we should reverse grabbing state to set the mouseOn state,\n            // because when the grabbing, the mask will on, and it will occur leave again\n            filter(() => !this.grabbing),\n            tap(() => (this.mouseOnContainer = false)),\n          ),\n        );\n        stopEvent = merge(\n          stopEvent,\n          fromEvent(this.containerElm, 'mouseover').pipe(\n            tap(() => (this.mouseOnContainer = true)),\n          ),\n        );\n      }\n\n      this.doNext = startEvent.pipe(\n        // not using debounceTime, it will stop mourseover event detect, will cause mourse-enable error\n        // debounceTime(this.delay),\n        switchMap(() => this.speedChange),\n        switchMap(() =>\n          timer(this.delay).pipe(\n            switchMap(() => this.runProgress(20)),\n            tap(() => {\n              this.isFromAuto = true;\n              // console.log('next');\n              if (this.direction === 'left') {\n                this.currentIndex -= this.scrollNum;\n              } else {\n                this.currentIndex += this.scrollNum;\n              }\n            }),\n            takeUntil(stopEvent.pipe(tap(() => (this.progressWidth = 0)))),\n          ),\n        ),\n      );\n\n      if (this.autoplay) {\n        this.doNextSub$ = this.doNext.subscribe();\n      }\n    });\n  }\n\n  private reSetAlignDistance() {\n    switch (this.align) {\n      case 'center':\n        this.alignDistance = (this.rootElmWidth - this.elmWidth) / 2;\n        break;\n      case 'left':\n        this.alignDistance = 0;\n        break;\n      case 'right':\n        this.alignDistance = this.rootElmWidth - this.elmWidth;\n        break;\n    }\n  }\n\n  private setViewWidth(isInit?: boolean) {\n    if (this.isAutoNum) {\n      this._showNum = this.getAutoNum();\n    }\n    this._renderer.addClass(this.containerElm, 'grab');\n    if (isInit) {\n      // remain one elm height\n      this._renderer.addClass(\n        this.containerElm,\n        'ngx-hm-carousel-display-npwrap',\n      );\n    }\n    this.elmWidth = this.rootElmWidth / this._showNum;\n\n    this._renderer.removeClass(\n      this.containerElm,\n      'ngx-hm-carousel-display-npwrap',\n    );\n\n    this.containerElmWidth = this.elmWidth * this.elms.length;\n\n    this._renderer.setStyle(this.containerElm, 'position', 'relative');\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.setStyle(ref.rootNodes[0], 'width', this.elmWidth);\n    });\n    this.elms.forEach((elm: HTMLElement) => {\n      this.setStyle(elm, 'width', this.elmWidth);\n    });\n  }\n\n  private bindHammer() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return this._zone.runOutsideAngular(() => {\n      const hm = new Hammer.Manager(this.containerElm);\n\n      const pan = new Hammer.Pan({\n        direction: Hammer.DIRECTION_HORIZONTAL,\n        threshold: 0,\n      });\n\n      hm.add(pan);\n\n      hm.on('panleft panright panend pancancel', (e: HammerInput) => {\n        // console.log(e.type);\n\n        if (this.lengthOne) {\n          return;\n        }\n\n        this.removeContainerTransition();\n\n        if (this.autoplay) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n          });\n        }\n\n        switch (e.type) {\n          case 'panleft':\n          case 'panright':\n            this.panCount++;\n            // only when panmove more than two times, set move\n            if (this.panCount < 2) {\n              return;\n            }\n\n            this.grabbing = true;\n            // When show-num is bigger than length, stop hammer\n            if (this.align !== 'center' && this.showNum >= this.elms.length) {\n              this.hammer.stop(true);\n              return;\n            }\n            // Slow down at the first and last pane.\n            if (!this.runLoop && this.outOfBound(e.type)) {\n              e.deltaX *= 0.2;\n            }\n\n            if (!this.notDrag) {\n              this.left =\n                -this.currentIndex * this.elmWidth +\n                this.alignDistance +\n                e.deltaX;\n            }\n\n            // // if not dragmany, when bigger than half\n            if (!this.isDragMany) {\n              if (Math.abs(e.deltaX) > this.elmWidth * 0.5) {\n                if (e.deltaX > 0) {\n                  this.currentIndex -= this.scrollNum;\n                } else {\n                  this.currentIndex += this.scrollNum;\n                }\n                this.hammer.stop(true);\n                return;\n              }\n            }\n            break;\n          case 'pancancel':\n            this.drawView(this.currentIndex);\n            break;\n\n          case 'panend':\n            // if boundary more than rate\n            if (\n              this.panBoundary !== false &&\n              Math.abs(e.deltaX) > this.elmWidth * this.panBoundary\n            ) {\n              const moveNum = this.isDragMany\n                ? Math.ceil(Math.abs(e.deltaX) / this.elmWidth)\n                : this.scrollNum;\n\n              const prevIndex = this.currentIndex - moveNum;\n              const nextIndex = this.currentIndex + moveNum;\n\n              // if right\n              if (e.deltaX > 0) {\n                this.goPrev(prevIndex);\n                // left\n              } else {\n                this.goNext(nextIndex);\n              }\n              break;\n            } else if (e.velocityX < -this.swipeVelocity && e.distance > 10) {\n              this.goNext(this.currentIndex + this.scrollNum);\n            } else if (e.velocityX > this.swipeVelocity && e.distance > 10) {\n              this.goPrev(this.currentIndex - this.scrollNum);\n            } else {\n              this.drawView(this.currentIndex);\n            }\n            break;\n        }\n      });\n\n      return hm;\n    });\n  }\n\n  private goPrev(prevIndex: number) {\n    if (!this.runLoop && prevIndex < 0) {\n      prevIndex = 0;\n      this.drawView(0);\n    }\n    this.currentIndex = prevIndex;\n  }\n\n  private goNext(nextIndex: number) {\n    if (!this.runLoop && nextIndex > this.maxRightIndex) {\n      nextIndex = this.maxRightIndex;\n      this.drawView(nextIndex);\n    }\n    this.currentIndex = nextIndex;\n  }\n\n  private bindClick() {\n    if (this.btnNext && this.btnPrev) {\n      return forkJoin([\n        fromEvent(this.btnNext.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex++),\n        ),\n        fromEvent(this.btnPrev.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex--),\n        ),\n      ]);\n    }\n    return of(null);\n  }\n\n  private callRestart() {\n    // if that is autoplay\n    // if that mouse is not on container( only mouse-enable is true, the state maybe true)\n    // if now is grabbing, skip this restart, using grabbing change restart\n    if (this.autoplay && !this.mouseOnContainer && !this.grabbing) {\n      this._zone.runOutsideAngular(() => {\n        this.restart.next(null);\n      });\n    }\n  }\n\n  private drawView(\n    index: number,\n    isAnimation = true,\n    isFromAuto = this.isFromAuto,\n  ) {\n    // move element only on length is more than 1\n    if (this.elms.length > 1) {\n      this.removeContainerTransition();\n      this.left = -(index * this.elmWidth - this.alignDistance);\n\n      if (isAnimation) {\n        if (isFromAuto) {\n          this._renderer.addClass(this.containerElm, this.aniClassAuto);\n        } else {\n          this._renderer.addClass(this.containerElm, this.aniClass);\n        }\n        // if infinite move to next index with timeout\n        this.infiniteHandler(index);\n      }\n    } else {\n      this.left = this.alignDistance;\n    }\n  }\n\n  private removeContainerTransition() {\n    this._renderer.removeClass(this.containerElm, this.aniClass);\n    this._renderer.removeClass(this.containerElm, this.aniClassAuto);\n  }\n\n  private infiniteHandler(index: number) {\n    if (this.runLoop) {\n      let state = 0;\n      state = index < 0 ? -1 : state;\n      state = index > this.itemElms.length - 1 ? 1 : state;\n\n      // index = index % this._showNum;\n      if (state !== 0) {\n        switch (state) {\n          case -1:\n            this._currentIndex =\n              (this.itemElms.length + index) % this.itemElms.length;\n            break;\n          case 1:\n            this._currentIndex = index % this.itemElms.length;\n            break;\n        }\n\n        const isFromAuto = this.isFromAuto;\n        if (this.saveTimeOut) {\n          this.saveTimeOut.unsubscribe();\n        }\n\n        this.saveTimeOut = timer(this.aniTime)\n          .pipe(\n            switchMap(() => {\n              // if it is any loop carousel, the next event need wait the timeout complete\n              if (this.aniTime === this.speed) {\n                this.removeContainerTransition();\n                this.left =\n                  -((this._currentIndex - state) * this.elmWidth) +\n                  this.alignDistance;\n                return timer(50).pipe(\n                  tap(() => {\n                    this.drawView(\n                      this.currentIndex,\n                      this.hasInitWriteValue,\n                      isFromAuto,\n                    );\n                  }),\n                );\n              } else {\n                this.drawView(this.currentIndex, false);\n              }\n              return of(null);\n            }),\n            takeUntil(this.stopEvent),\n          )\n          .subscribe();\n      }\n    }\n  }\n\n  private outOfBound(type) {\n    switch (type) {\n      case 'panleft':\n        return this.currentIndex >= this.maxRightIndex;\n      case 'panright':\n        return this.currentIndex <= 0;\n    }\n  }\n\n  private runProgress(betweenTime): Observable<any> {\n    return this._zone.runOutsideAngular(() => {\n      const howTimes = this.speed / betweenTime;\n      const everyIncrease = (100 / this.speed) * betweenTime;\n      return interval(betweenTime).pipe(\n        tap((t) => {\n          this.progressWidth = (t % howTimes) * everyIncrease;\n        }),\n        bufferCount(Math.round(howTimes), 0),\n      );\n    });\n  }\n\n  private getAutoNum() {\n    const currWidth = this.rootElmWidth;\n    // check user has had set breakpoint\n    if (this.breakpoint.length > 0) {\n      // get the last bigget point\n      const now = this.breakpoint.find((b) => {\n        return b.width >= currWidth;\n      });\n      // if find value, it is current width\n      if (now) {\n        return now.number;\n      }\n      return this.breakpoint[this.breakpoint.length - 1].number;\n    }\n\n    // system init show number\n    const initNum = 3;\n    // 610\n    if (currWidth > 300) {\n      return Math.floor(initNum + currWidth / 200);\n    }\n    return initNum;\n  }\n\n  private addStyle(\n    elm: HTMLElement,\n    style: { [key: string]: string | number },\n  ) {\n    if (style) {\n      Object.keys(style).forEach((key) => {\n        const value = style[key];\n        this._renderer.setStyle(elm, key, value);\n      });\n    }\n  }\n\n  private setStyle(elm: HTMLElement, style: string, value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(elm, style, `${value}px`);\n    } else {\n      this._renderer.setStyle(elm, style, `${value}%`);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxHmCarouselDynamicDirective } from './ngx-hm-carousel-dynamic.directive';\nimport { NgxHmCarouselComponent } from './ngx-hm-carousel.component';\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n  exports: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n})\nexport class NgxHmCarouselModule {}\n","/*\n * Public API Surface of ngx-hm-carousel\n */\nexport * from './lib/ngx-hm-carousel-item.directive';\nexport * from './lib/ngx-hm-carousel-dynamic.directive';\nexport * from './lib/ngx-hm-carousel.component';\nexport * from './lib/ngx-hm-carousel.module';\nexport * from './lib/rxjs.observable.resize';\nexport * from './lib/ngx-hm-carousel.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}