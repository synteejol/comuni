{"version":3,"file":"ngx-hm-carousel.js","sources":["ng:/ngx-hm-carousel/lib/ngx-hm-carousel-item.directive.ts","ng:/ngx-hm-carousel/lib/ngx-hm-carousel-dynamic.directive.ts","ng:/ngx-hm-carousel/lib/rxjs.observable.resize.ts","ng:/ngx-hm-carousel/lib/ngx-hm-carousel.component.ts","ng:/ngx-hm-carousel/lib/ngx-hm-carousel.module.ts","ng:/ngx-hm-carousel/public-api.ts","ng:/ngx-hm-carousel/ngx-hm-carousel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-hm-carousel-item]',\n})\nexport class NgxHmCarouselItemDirective {\n  constructor() {}\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n// TODO: ssr problem should not hide on ssr\n// TODO: show number change should recaculate is show and init show number\n@Directive({\n  selector: '[ngxHmCarouselDynamic]',\n})\nexport class NgxHmCarouselDynamicDirective implements OnInit {\n  @Input('ngxHmCarouselDynamic') index: number;\n  @Input('ngxHmCarouselDynamicLength') length: number;\n  @Input('ngxHmCarouselDynamicShow') show = 1;\n  @Input('ngxHmCarouselDynamicIndex')\n  set currentI(value: number) {\n    if (!this.compelete) {\n      const nextI = value + this.show;\n      const prevI = value - this.show;\n      if (\n        this.index === 0 ||\n        this.index === this.length - 1 ||\n        this.index === nextI ||\n        this.index === prevI ||\n        this.index === value\n      ) {\n        this._view.createEmbeddedView(this._template);\n        this.compelete = true;\n      }\n    }\n  }\n\n  private compelete = false;\n\n  constructor(\n    private _view: ViewContainerRef,\n    private _template: TemplateRef<any>,\n  ) {\n    this._view.clear();\n  }\n\n  ngOnInit(): void {}\n}\n","import ResizeObserver from 'resize-observer-polyfill';\nimport { Observable, Subscriber } from 'rxjs';\nimport { debounceTime, tap, finalize } from 'rxjs/operators';\n\n/**\n * An observable creator for element resize.\n * @param elm the watch element.\n * @param cb when resize complete, call back function.\n * @param time resize emit time, default is 200\n */\nexport function resizeObservable(\n  elm: HTMLElement,\n  cb: () => void,\n  time = 200,\n): Observable<any> {\n  let elmObserve$: ResizeObserver;\n  return new Observable((observer: Subscriber<any>) => {\n    elmObserve$ = new ResizeObserver((entries, obs) => {\n      observer.next(elmObserve$);\n    });\n    elmObserve$.observe(elm);\n  }).pipe(\n    debounceTime(time),\n    tap(() => {\n      cb();\n    }),\n    finalize(() => {\n      elmObserve$.unobserve(elm);\n      elmObserve$.disconnect();\n    }),\n  );\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EmbeddedViewRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  forkJoin,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport { bufferCount, filter, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\nimport { NgxHmCarouselBreakPointUp } from './ngx-hm-carousel.model';\nimport { resizeObservable } from './rxjs.observable.resize';\n\n@Component({\n  selector: 'ngx-hm-carousel',\n  templateUrl: './ngx-hm-carousel.component.html',\n  styleUrls: ['./ngx-hm-carousel.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxHmCarouselComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxHmCarouselComponent\n  implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('containerElm') container: ElementRef;\n  @ViewChild('prev') btnPrev: ElementRef;\n  @ViewChild('next') btnNext: ElementRef;\n  @ViewChild('progress') progressContainerElm: ElementRef;\n\n  // get all item elms\n  @ContentChildren(NgxHmCarouselItemDirective, {\n    read: ElementRef,\n    descendants: true,\n  })\n  itemElms: QueryList<ElementRef>;\n\n  @ContentChild('carouselPrev') contentPrev: TemplateRef<any>;\n  @ContentChild('carouselNext') contentNext: TemplateRef<any>;\n  @ContentChild('carouselDot') dotElm: TemplateRef<any>;\n  @ContentChild('carouselProgress') progressElm: TemplateRef<any>;\n\n  @ContentChild('infiniteContainer', { read: ViewContainerRef })\n  infiniteContainer: ViewContainerRef;\n\n  @ContentChild('carouselContent') contentContent: TemplateRef<any>;\n\n  /** the data you using with *ngFor, it need when infinite mode or autoplay mode */\n  @Input() data: any[];\n  /** when infinite is true, the animation time with item, default is 400. */\n  @Input() aniTime = 400;\n  /** this class will add in #containerElm when model change */\n  @Input() aniClass = 'transition';\n\n  /** this class will add when carousel auto play,\n   * this default autoplay animation is same as aniClass\n   */\n  @Input() aniClassAuto = this.aniClass;\n\n  /**\n   * user move picture with the container width rate,\n   * when more than that rate, it will go to next or prev,\n   * set false will never move with distance rate,\n   * default is `0.15`\n   */\n  @Input('pan-boundary') panBoundary: number | false = 0.15;\n\n  /** when show-num is bigger than 1, the first item align, defaulte is `center` */\n  @Input() align: 'left' | 'center' | 'right' = 'center';\n\n  /**\n   * disable when drag occur the child element will follow touch point.\n   * default is `false`\n   */\n  @Input('not-follow-pan') notDrag = false;\n\n  /**\n   * the event binding state for stop auto play when mourse moveover\n   */\n  @Input('mourse-enable') mourseEnable = false;\n  /** each auto play between time */\n  @Input('between-delay') delay = 8000;\n  /** auto play direction, default is `right`. */\n  @Input('autoplay-direction') direction: 'left' | 'right' = 'right';\n  /** how many number with each scroll, default is `1`. */\n  @Input('scroll-num') scrollNum = 1;\n  /** Could user scroll many item once, simulate with scrollbar, default is `false` */\n  @Input('drag-many') isDragMany = false;\n  /** Minimal velocity required before recognizing, unit is in px per ms, default `0.3` */\n  @Input('swipe-velocity') swipeVelocity = 0.3;\n\n  /**\n   * switch show number with custom logic like css @media (min-width: `number`px)\n   */\n  @Input() breakpoint: NgxHmCarouselBreakPointUp[] = [];\n\n  /** disable drag event with touch and mouse pan moving, default is `false` */\n  @Input('disable-drag')\n  get disableDrag() {\n    return this._disableDrag;\n  }\n  set disableDrag(value) {\n    if (this.rootElm) {\n      if (this._disableDrag !== value) {\n        if (value) {\n          this.destoryHammer();\n        } else {\n          this.hammer = this.bindHammer();\n        }\n      }\n    }\n    this._disableDrag = value;\n  }\n\n  /** is the carousel can move infinite */\n  @Input('infinite')\n  get infinite() {\n    return this._infinite;\n  }\n  set infinite(value) {\n    this._infinite = value;\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.addStyle(ref.rootNodes[0], {\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n    });\n  }\n\n  /** auto play speed */\n  @Input('autoplay-speed')\n  get speed() {\n    return this.speedChange.value;\n  }\n  set speed(value) {\n    this._zone.runOutsideAngular(() => {\n      this.speedChange.next(value);\n    });\n  }\n\n  /**\n   * how many number items to show once, default is `1`\n   * set `auto` to using `[breakpoint]` set value.\n   */\n  @Input('show-num')\n  get showNum() {\n    return this._showNum;\n  }\n  set showNum(value: number | 'auto') {\n    if (value === 'auto') {\n      this.isAutoNum = true;\n    } else {\n      this._showNum = +value;\n      if (this.rootElm) {\n        this.setViewWidth();\n        this.reSetAlignDistance();\n      }\n    }\n  }\n\n  /** carousel auto play confing */\n  @Input('autoplay')\n  get autoplay() {\n    return this._autoplay;\n  }\n  set autoplay(value) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.elms) {\n        this.progressWidth = 0;\n        if (value) {\n          this._zone.runOutsideAngular(() => {\n            this.doNextSub$ = this.doNext.subscribe();\n          });\n        } else {\n          if (this.doNextSub$) {\n            this.doNextSub$.unsubscribe();\n          }\n        }\n      }\n    }\n    this._autoplay = value;\n    // if set autoplay, then the infinite is true\n    if (value) {\n      this._tmpInfinite = this.infinite;\n      this.infinite = true;\n    } else {\n      this.infinite = this._tmpInfinite;\n    }\n  }\n\n  get currentIndex() {\n    return this._currentIndex;\n  }\n  set currentIndex(value) {\n    // if now index if not equale to save index, do someting\n    if (this.currentIndex !== value) {\n      // if the value is not contain with the boundary not handler\n      if (!this.runLoop && !(0 <= value && value <= this.itemElms.length - 1)) {\n        return;\n      }\n      this._currentIndex = value;\n      if (this.elms) {\n        if (this.autoplay && !this.isFromAuto) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n            this.callRestart();\n          });\n        }\n        this.drawView(this.currentIndex, this.hasInitWriteValue);\n        if (this.isDragMany) {\n          this.hasInitWriteValue = true;\n        }\n      }\n      if (\n        0 <= this.currentIndex &&\n        this.currentIndex <= this.itemElms.length - 1\n      ) {\n        this._zone.run(() => {\n          this.onChange(this.currentIndex);\n          this._cd.detectChanges();\n        });\n      }\n    }\n    this.isFromAuto = false;\n  }\n\n  get progressWidth() {\n    return this._porgressWidth;\n  }\n  set progressWidth(value) {\n    if (this.progressElm !== undefined && this.autoplay) {\n      this._porgressWidth = value;\n      this._renderer.setStyle(\n        (this.progressContainerElm.nativeElement as HTMLElement).children[0],\n        'width',\n        `${this.progressWidth}%`,\n      );\n    }\n  }\n\n  get grabbing() {\n    return this._grabbing;\n  }\n  set grabbing(value: boolean) {\n    if (this._grabbing !== value) {\n      // console.log(value);\n      this._zone.run(() => {\n        this._grabbing = value;\n        if (value) {\n          this._renderer.addClass(this.containerElm, 'grabbing');\n        } else {\n          this.panCount = 0;\n          this.callRestart();\n          this._renderer.removeClass(this.containerElm, 'grabbing');\n        }\n        this._cd.detectChanges();\n      });\n    }\n  }\n\n  // using for check mouse or touchend\n  leaveObs$ = merge(\n    fromEvent(this._document, 'mouseup'),\n    fromEvent(this._document, 'touchend'),\n  ).pipe(\n    tap((e: Event) => {\n      this.grabbing = false;\n      e.stopPropagation();\n      e.preventDefault();\n    }),\n  );\n\n  private set left(value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}px)`,\n      );\n    } else {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}%)`,\n      );\n    }\n  }\n\n  private get maxRightIndex() {\n    let addIndex = 0;\n    switch (this.align) {\n      case 'left':\n        addIndex = 0;\n        break;\n      case 'center':\n        addIndex = (this.showNum as number) - 1;\n        break;\n      case 'right':\n        addIndex = (this.showNum as number) - 1;\n        break;\n    }\n    return this.itemElms.length - 1 - this._showNum + 1 + addIndex;\n  }\n\n  private get runLoop() {\n    return this.autoplay || this.infinite;\n  }\n  private get lengthOne() {\n    return this.itemElms.length === 1;\n  }\n\n  private get rootElmWidth() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().width\n      : 100;\n  }\n\n  private set containerElmWidth(value: number) {\n    this.setStyle(this.containerElm, 'width', value);\n  }\n\n  private isFromAuto = true;\n  private isAutoNum = false;\n  private mouseOnContainer = false;\n  private alignDistance = 0;\n  private elmWidth = 0;\n\n  private rootElm: HTMLElement;\n  private containerElm: HTMLElement;\n\n  private elms: Array<HTMLElement>;\n  private infiniteElmRefs: Array<EmbeddedViewRef<any>> = [];\n\n  private hammer: HammerManager;\n\n  private saveTimeOut: Subscription;\n  private doNextSub$: Subscription;\n  private doNext: Observable<any>;\n\n  private restart = new BehaviorSubject<any>(null);\n  private speedChange = new BehaviorSubject(5000);\n  private stopEvent = new Subject<any>();\n  private destroy$ = new Subject<any>();\n\n  private _porgressWidth = 0;\n  private _currentIndex = 0;\n  private _showNum = 1;\n  private _autoplay = false;\n  private _infinite = false;\n  private _tmpInfinite = false;\n  private _grabbing = false;\n  private _disableDrag = false;\n\n  private panCount = 0;\n\n  // this variable use for check the init value is write with ngModel,\n  // when init first, not set with animation\n  private hasInitWriteValue = false;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) private _document,\n    private _renderer: Renderer2,\n    private _zone: NgZone,\n    private _cd: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit() {\n    this.rootElm = this.container.nativeElement;\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\n\n    this.init();\n\n    forkJoin([\n      this.bindClick(),\n      // when item changed, remove old hammer binding, and reset width\n      this.itemElms.changes.pipe(\n        // detectChanges to change view dots\n        tap(() => {\n          if (this.currentIndex > this.itemElms.length - 1) {\n            // i can't pass the changedetection check, only the way to using timeout. :(\n            setTimeout(() => {\n              this.currentIndex = this.itemElms.length - 1;\n            }, 0);\n          }\n          this.destroy();\n          this.removeInfiniteElm();\n          this.init();\n          this.progressWidth = 0;\n        }),\n        tap(() => this._cd.detectChanges()),\n      ),\n      resizeObservable(this.rootElm, () => this.containerResize()),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  writeValue(value: any) {\n    if (value || value === 0) {\n      this.currentIndex = value;\n      this.hasInitWriteValue = true;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => any) {\n    this.onTouched = fn;\n  }\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  private init() {\n    this.initVariable();\n    this.setViewWidth(true);\n    this.reSetAlignDistance();\n    if (!this.disableDrag) {\n      this.hammer = this.bindHammer();\n    }\n    this.drawView(this.currentIndex, false);\n    if (isPlatformBrowser(this.platformId) && this.runLoop) {\n      this.addInfiniteElm();\n    }\n  }\n\n  private destroy() {\n    this.destoryHammer();\n\n    if (this.autoplay) {\n      this.doNextSub$.unsubscribe();\n    }\n  }\n\n  private destoryHammer() {\n    if (this.hammer) {\n      this.hammer.destroy();\n    }\n  }\n\n  private addInfiniteElm() {\n    for (let i = 1; i <= this.showNum; i++) {\n      const elm = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[this.itemElms.length - i],\n          index: this.itemElms.length - i,\n        },\n      );\n      this.addStyle(elm.rootNodes[0], {\n        position: 'absolute',\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        transform: `translateX(-${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm.rootNodes[0], 'width', this.elmWidth);\n\n      const elm2 = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[i - 1],\n          index: i - 1,\n        },\n      );\n      this.addStyle(elm2.rootNodes[0], {\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        transform: `translateX(${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm2.rootNodes[0], 'width', this.elmWidth);\n\n      elm.detectChanges();\n      elm2.detectChanges();\n\n      this.infiniteElmRefs.push(elm);\n      this.infiniteElmRefs.push(elm2);\n    }\n  }\n\n  private removeInfiniteElm() {\n    this.infiniteElmRefs.forEach((a) => {\n      a.detach();\n      a.destroy();\n    });\n    if (this.infiniteContainer) {\n      this.infiniteContainer.clear();\n    }\n    this.infiniteElmRefs = [];\n  }\n\n  private containerResize() {\n    this.setViewWidth();\n    this.reSetAlignDistance();\n\n    // 因為不能滑了，所以要回到第一個，以確保全部都有顯示\n    if (this.align !== 'center' && this.showNum >= this.elms.length) {\n      this.currentIndex = 0;\n    }\n    this.drawView(this.currentIndex, false);\n  }\n\n  private initVariable() {\n    this._zone.runOutsideAngular(() => {\n      this.elms = this.itemElms.toArray().map((x) => x.nativeElement);\n\n      let startEvent = this.restart.asObservable();\n      let stopEvent = this.stopEvent.asObservable();\n      if (this.mourseEnable) {\n        startEvent = merge(\n          startEvent,\n          fromEvent(this.containerElm, 'mouseleave').pipe(\n            // when leave, we should reverse grabbing state to set the mouseOn state,\n            // because when the grabbing, the mask will on, and it will occur leave again\n            filter(() => !this.grabbing),\n            tap(() => (this.mouseOnContainer = false)),\n          ),\n        );\n        stopEvent = merge(\n          stopEvent,\n          fromEvent(this.containerElm, 'mouseover').pipe(\n            tap(() => (this.mouseOnContainer = true)),\n          ),\n        );\n      }\n\n      this.doNext = startEvent.pipe(\n        // not using debounceTime, it will stop mourseover event detect, will cause mourse-enable error\n        // debounceTime(this.delay),\n        switchMap(() => this.speedChange),\n        switchMap(() =>\n          timer(this.delay).pipe(\n            switchMap(() => this.runProgress(20)),\n            tap(() => {\n              this.isFromAuto = true;\n              // console.log('next');\n              if (this.direction === 'left') {\n                this.currentIndex -= this.scrollNum;\n              } else {\n                this.currentIndex += this.scrollNum;\n              }\n            }),\n            takeUntil(stopEvent.pipe(tap(() => (this.progressWidth = 0)))),\n          ),\n        ),\n      );\n\n      if (this.autoplay) {\n        this.doNextSub$ = this.doNext.subscribe();\n      }\n    });\n  }\n\n  private reSetAlignDistance() {\n    switch (this.align) {\n      case 'center':\n        this.alignDistance = (this.rootElmWidth - this.elmWidth) / 2;\n        break;\n      case 'left':\n        this.alignDistance = 0;\n        break;\n      case 'right':\n        this.alignDistance = this.rootElmWidth - this.elmWidth;\n        break;\n    }\n  }\n\n  private setViewWidth(isInit?: boolean) {\n    if (this.isAutoNum) {\n      this._showNum = this.getAutoNum();\n    }\n    this._renderer.addClass(this.containerElm, 'grab');\n    if (isInit) {\n      // remain one elm height\n      this._renderer.addClass(\n        this.containerElm,\n        'ngx-hm-carousel-display-npwrap',\n      );\n    }\n    this.elmWidth = this.rootElmWidth / this._showNum;\n\n    this._renderer.removeClass(\n      this.containerElm,\n      'ngx-hm-carousel-display-npwrap',\n    );\n\n    this.containerElmWidth = this.elmWidth * this.elms.length;\n\n    this._renderer.setStyle(this.containerElm, 'position', 'relative');\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.setStyle(ref.rootNodes[0], 'width', this.elmWidth);\n    });\n    this.elms.forEach((elm: HTMLElement) => {\n      this.setStyle(elm, 'width', this.elmWidth);\n    });\n  }\n\n  private bindHammer() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return this._zone.runOutsideAngular(() => {\n      const hm = new Hammer.Manager(this.containerElm);\n\n      const pan = new Hammer.Pan({\n        direction: Hammer.DIRECTION_HORIZONTAL,\n        threshold: 0,\n      });\n\n      hm.add(pan);\n\n      hm.on('panleft panright panend pancancel', (e: HammerInput) => {\n        // console.log(e.type);\n\n        if (this.lengthOne) {\n          return;\n        }\n\n        this.removeContainerTransition();\n\n        if (this.autoplay) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n          });\n        }\n\n        switch (e.type) {\n          case 'panleft':\n          case 'panright':\n            this.panCount++;\n            // only when panmove more than two times, set move\n            if (this.panCount < 2) {\n              return;\n            }\n\n            this.grabbing = true;\n            // When show-num is bigger than length, stop hammer\n            if (this.align !== 'center' && this.showNum >= this.elms.length) {\n              this.hammer.stop(true);\n              return;\n            }\n            // Slow down at the first and last pane.\n            if (!this.runLoop && this.outOfBound(e.type)) {\n              e.deltaX *= 0.2;\n            }\n\n            if (!this.notDrag) {\n              this.left =\n                -this.currentIndex * this.elmWidth +\n                this.alignDistance +\n                e.deltaX;\n            }\n\n            // // if not dragmany, when bigger than half\n            if (!this.isDragMany) {\n              if (Math.abs(e.deltaX) > this.elmWidth * 0.5) {\n                if (e.deltaX > 0) {\n                  this.currentIndex -= this.scrollNum;\n                } else {\n                  this.currentIndex += this.scrollNum;\n                }\n                this.hammer.stop(true);\n                return;\n              }\n            }\n            break;\n          case 'pancancel':\n            this.drawView(this.currentIndex);\n            break;\n\n          case 'panend':\n            // if boundary more than rate\n            if (\n              this.panBoundary !== false &&\n              Math.abs(e.deltaX) > this.elmWidth * this.panBoundary\n            ) {\n              const moveNum = this.isDragMany\n                ? Math.ceil(Math.abs(e.deltaX) / this.elmWidth)\n                : this.scrollNum;\n\n              const prevIndex = this.currentIndex - moveNum;\n              const nextIndex = this.currentIndex + moveNum;\n\n              // if right\n              if (e.deltaX > 0) {\n                this.goPrev(prevIndex);\n                // left\n              } else {\n                this.goNext(nextIndex);\n              }\n              break;\n            } else if (e.velocityX < -this.swipeVelocity && e.distance > 10) {\n              this.goNext(this.currentIndex + this.scrollNum);\n            } else if (e.velocityX > this.swipeVelocity && e.distance > 10) {\n              this.goPrev(this.currentIndex - this.scrollNum);\n            } else {\n              this.drawView(this.currentIndex);\n            }\n            break;\n        }\n      });\n\n      return hm;\n    });\n  }\n\n  private goPrev(prevIndex: number) {\n    if (!this.runLoop && prevIndex < 0) {\n      prevIndex = 0;\n      this.drawView(0);\n    }\n    this.currentIndex = prevIndex;\n  }\n\n  private goNext(nextIndex: number) {\n    if (!this.runLoop && nextIndex > this.maxRightIndex) {\n      nextIndex = this.maxRightIndex;\n      this.drawView(nextIndex);\n    }\n    this.currentIndex = nextIndex;\n  }\n\n  private bindClick() {\n    if (this.btnNext && this.btnPrev) {\n      return forkJoin([\n        fromEvent(this.btnNext.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex++),\n        ),\n        fromEvent(this.btnPrev.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex--),\n        ),\n      ]);\n    }\n    return of(null);\n  }\n\n  private callRestart() {\n    // if that is autoplay\n    // if that mouse is not on container( only mouse-enable is true, the state maybe true)\n    // if now is grabbing, skip this restart, using grabbing change restart\n    if (this.autoplay && !this.mouseOnContainer && !this.grabbing) {\n      this._zone.runOutsideAngular(() => {\n        this.restart.next(null);\n      });\n    }\n  }\n\n  private drawView(\n    index: number,\n    isAnimation = true,\n    isFromAuto = this.isFromAuto,\n  ) {\n    // move element only on length is more than 1\n    if (this.elms.length > 1) {\n      this.removeContainerTransition();\n      this.left = -(index * this.elmWidth - this.alignDistance);\n\n      if (isAnimation) {\n        if (isFromAuto) {\n          this._renderer.addClass(this.containerElm, this.aniClassAuto);\n        } else {\n          this._renderer.addClass(this.containerElm, this.aniClass);\n        }\n        // if infinite move to next index with timeout\n        this.infiniteHandler(index);\n      }\n    } else {\n      this.left = this.alignDistance;\n    }\n  }\n\n  private removeContainerTransition() {\n    this._renderer.removeClass(this.containerElm, this.aniClass);\n    this._renderer.removeClass(this.containerElm, this.aniClassAuto);\n  }\n\n  private infiniteHandler(index: number) {\n    if (this.runLoop) {\n      let state = 0;\n      state = index < 0 ? -1 : state;\n      state = index > this.itemElms.length - 1 ? 1 : state;\n\n      // index = index % this._showNum;\n      if (state !== 0) {\n        switch (state) {\n          case -1:\n            this._currentIndex =\n              (this.itemElms.length + index) % this.itemElms.length;\n            break;\n          case 1:\n            this._currentIndex = index % this.itemElms.length;\n            break;\n        }\n\n        const isFromAuto = this.isFromAuto;\n        if (this.saveTimeOut) {\n          this.saveTimeOut.unsubscribe();\n        }\n\n        this.saveTimeOut = timer(this.aniTime)\n          .pipe(\n            switchMap(() => {\n              // if it is any loop carousel, the next event need wait the timeout complete\n              if (this.aniTime === this.speed) {\n                this.removeContainerTransition();\n                this.left =\n                  -((this._currentIndex - state) * this.elmWidth) +\n                  this.alignDistance;\n                return timer(50).pipe(\n                  tap(() => {\n                    this.drawView(\n                      this.currentIndex,\n                      this.hasInitWriteValue,\n                      isFromAuto,\n                    );\n                  }),\n                );\n              } else {\n                this.drawView(this.currentIndex, false);\n              }\n              return of(null);\n            }),\n            takeUntil(this.stopEvent),\n          )\n          .subscribe();\n      }\n    }\n  }\n\n  private outOfBound(type) {\n    switch (type) {\n      case 'panleft':\n        return this.currentIndex >= this.maxRightIndex;\n      case 'panright':\n        return this.currentIndex <= 0;\n    }\n  }\n\n  private runProgress(betweenTime): Observable<any> {\n    return this._zone.runOutsideAngular(() => {\n      const howTimes = this.speed / betweenTime;\n      const everyIncrease = (100 / this.speed) * betweenTime;\n      return interval(betweenTime).pipe(\n        tap((t) => {\n          this.progressWidth = (t % howTimes) * everyIncrease;\n        }),\n        bufferCount(Math.round(howTimes), 0),\n      );\n    });\n  }\n\n  private getAutoNum() {\n    const currWidth = this.rootElmWidth;\n    // check user has had set breakpoint\n    if (this.breakpoint.length > 0) {\n      // get the last bigget point\n      const now = this.breakpoint.find((b) => {\n        return b.width >= currWidth;\n      });\n      // if find value, it is current width\n      if (now) {\n        return now.number;\n      }\n      return this.breakpoint[this.breakpoint.length - 1].number;\n    }\n\n    // system init show number\n    const initNum = 3;\n    // 610\n    if (currWidth > 300) {\n      return Math.floor(initNum + currWidth / 200);\n    }\n    return initNum;\n  }\n\n  private addStyle(\n    elm: HTMLElement,\n    style: { [key: string]: string | number },\n  ) {\n    if (style) {\n      Object.keys(style).forEach((key) => {\n        const value = style[key];\n        this._renderer.setStyle(elm, key, value);\n      });\n    }\n  }\n\n  private setStyle(elm: HTMLElement, style: string, value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(elm, style, `${value}px`);\n    } else {\n      this._renderer.setStyle(elm, style, `${value}%`);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxHmCarouselDynamicDirective } from './ngx-hm-carousel-dynamic.directive';\nimport { NgxHmCarouselComponent } from './ngx-hm-carousel.component';\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n  exports: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n})\nexport class NgxHmCarouselModule {}\n","/*\n * Public API Surface of ngx-hm-carousel\n */\nexport * from './lib/ngx-hm-carousel-item.directive';\nexport * from './lib/ngx-hm-carousel-dynamic.directive';\nexport * from './lib/ngx-hm-carousel.component';\nexport * from './lib/ngx-hm-carousel.module';\nexport * from './lib/rxjs.observable.resize';\nexport * from './lib/ngx-hm-carousel.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}