{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-hm-carousel/lib/ngx-hm-carousel-item.directive.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel-dynamic.directive.ts","ng://ngx-hm-carousel/lib/rxjs.observable.resize.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.component.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","NgxHmCarouselItemDirective","Directive","selector","NgxHmCarouselDynamicDirective","_view","_template","this","show","compelete","clear","prototype","value","nextI","prevI","index","createEmbeddedView","ngOnInit","ViewContainerRef","TemplateRef","Input","resizeObservable","elm","cb","time","elmObserve$","Observable","observer","ResizeObserver","entries","obs","next","observe","pipe","debounceTime","tap","finalize","unobserve","disconnect","NgxHmCarouselComponent","platformId","_document","_renderer","_zone","_cd","_this","aniTime","aniClass","aniClassAuto","panBoundary","align","notDrag","mourseEnable","delay","direction","scrollNum","isDragMany","swipeVelocity","breakpoint","leaveObs$","merge","fromEvent","e","grabbing","stopPropagation","preventDefault","isFromAuto","isAutoNum","mouseOnContainer","alignDistance","elmWidth","infiniteElmRefs","restart","BehaviorSubject","speedChange","stopEvent","Subject","destroy$","_porgressWidth","_currentIndex","_showNum","_autoplay","_infinite","_tmpInfinite","_grabbing","_disableDrag","panCount","hasInitWriteValue","onChange","_","onTouched","rootElm","destoryHammer","hammer","bindHammer","forEach","ref","addStyle","rootNodes","visibility","runLoop","runOutsideAngular","setViewWidth","reSetAlignDistance","isPlatformBrowser","elms","progressWidth","doNextSub$","doNext","subscribe","unsubscribe","infinite","currentIndex","itemElms","autoplay","callRestart","drawView","run","detectChanges","undefined","progressElm","setStyle","progressContainerElm","nativeElement","children","addClass","containerElm","removeClass","addIndex","showNum","getBoundingClientRect","width","ngAfterViewInit","container","init","forkJoin","bindClick","changes","setTimeout","destroy","removeInfiniteElm","containerResize","takeUntil","ngOnDestroy","writeValue","registerOnChange","fn","registerOnTouched","initVariable","disableDrag","addInfiniteElm","infiniteContainer","contentContent","$implicit","data","position","transform","elm2","right","top","push","a","detach","toArray","map","x","startEvent","asObservable","filter","switchMap","timer","runProgress","rootElmWidth","isInit","getAutoNum","containerElmWidth","hm","Hammer","Manager","pan","Pan","DIRECTION_HORIZONTAL","threshold","add","on","lengthOne","removeContainerTransition","type","stop","outOfBound","deltaX","left","Math","abs","moveNum","ceil","prevIndex","nextIndex","goPrev","goNext","velocityX","distance","maxRightIndex","btnNext","btnPrev","of","isAnimation","infiniteHandler","state_1","isFromAuto_1","saveTimeOut","speed","betweenTime","howTimes","everyIncrease","interval","t","bufferCount","round","currWidth","now","find","b","number","floor","style","keys","Inject","args","PLATFORM_ID","DOCUMENT","Renderer2","NgZone","ChangeDetectorRef","ViewChild","ElementRef","ContentChildren","read","descendants","QueryList","ContentChild","NgxHmCarouselComponent_1","Component","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","changeDetection","ChangeDetectionStrategy","OnPush","NgxHmCarouselModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-hm-carousel-item]',\n})\nexport class NgxHmCarouselItemDirective {\n  constructor() {}\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n// TODO: ssr problem should not hide on ssr\n// TODO: show number change should recaculate is show and init show number\n@Directive({\n  selector: '[ngxHmCarouselDynamic]',\n})\nexport class NgxHmCarouselDynamicDirective implements OnInit {\n  @Input('ngxHmCarouselDynamic') index: number;\n  @Input('ngxHmCarouselDynamicLength') length: number;\n  @Input('ngxHmCarouselDynamicShow') show = 1;\n  @Input('ngxHmCarouselDynamicIndex')\n  set currentI(value: number) {\n    if (!this.compelete) {\n      const nextI = value + this.show;\n      const prevI = value - this.show;\n      if (\n        this.index === 0 ||\n        this.index === this.length - 1 ||\n        this.index === nextI ||\n        this.index === prevI ||\n        this.index === value\n      ) {\n        this._view.createEmbeddedView(this._template);\n        this.compelete = true;\n      }\n    }\n  }\n\n  private compelete = false;\n\n  constructor(\n    private _view: ViewContainerRef,\n    private _template: TemplateRef<any>,\n  ) {\n    this._view.clear();\n  }\n\n  ngOnInit(): void {}\n}\n","import ResizeObserver from 'resize-observer-polyfill';\nimport { Observable, Subscriber } from 'rxjs';\nimport { debounceTime, tap, finalize } from 'rxjs/operators';\n\n/**\n * An observable creator for element resize.\n * @param elm the watch element.\n * @param cb when resize complete, call back function.\n * @param time resize emit time, default is 200\n */\nexport function resizeObservable(\n  elm: HTMLElement,\n  cb: () => void,\n  time = 200,\n): Observable<any> {\n  let elmObserve$: ResizeObserver;\n  return new Observable((observer: Subscriber<any>) => {\n    elmObserve$ = new ResizeObserver((entries, obs) => {\n      observer.next(elmObserve$);\n    });\n    elmObserve$.observe(elm);\n  }).pipe(\n    debounceTime(time),\n    tap(() => {\n      cb();\n    }),\n    finalize(() => {\n      elmObserve$.unobserve(elm);\n      elmObserve$.disconnect();\n    }),\n  );\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EmbeddedViewRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  forkJoin,\n  fromEvent,\n  interval,\n  merge,\n  Observable,\n  of,\n  Subject,\n  Subscription,\n  timer,\n} from 'rxjs';\nimport { bufferCount, filter, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\nimport { NgxHmCarouselBreakPointUp } from './ngx-hm-carousel.model';\nimport { resizeObservable } from './rxjs.observable.resize';\n\n@Component({\n  selector: 'ngx-hm-carousel',\n  templateUrl: './ngx-hm-carousel.component.html',\n  styleUrls: ['./ngx-hm-carousel.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxHmCarouselComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxHmCarouselComponent\n  implements ControlValueAccessor, AfterViewInit, OnDestroy {\n  @ViewChild('containerElm') container: ElementRef;\n  @ViewChild('prev') btnPrev: ElementRef;\n  @ViewChild('next') btnNext: ElementRef;\n  @ViewChild('progress') progressContainerElm: ElementRef;\n\n  // get all item elms\n  @ContentChildren(NgxHmCarouselItemDirective, {\n    read: ElementRef,\n    descendants: true,\n  })\n  itemElms: QueryList<ElementRef>;\n\n  @ContentChild('carouselPrev') contentPrev: TemplateRef<any>;\n  @ContentChild('carouselNext') contentNext: TemplateRef<any>;\n  @ContentChild('carouselDot') dotElm: TemplateRef<any>;\n  @ContentChild('carouselProgress') progressElm: TemplateRef<any>;\n\n  @ContentChild('infiniteContainer', { read: ViewContainerRef })\n  infiniteContainer: ViewContainerRef;\n\n  @ContentChild('carouselContent') contentContent: TemplateRef<any>;\n\n  /** the data you using with *ngFor, it need when infinite mode or autoplay mode */\n  @Input() data: any[];\n  /** when infinite is true, the animation time with item, default is 400. */\n  @Input() aniTime = 400;\n  /** this class will add in #containerElm when model change */\n  @Input() aniClass = 'transition';\n\n  /** this class will add when carousel auto play,\n   * this default autoplay animation is same as aniClass\n   */\n  @Input() aniClassAuto = this.aniClass;\n\n  /**\n   * user move picture with the container width rate,\n   * when more than that rate, it will go to next or prev,\n   * set false will never move with distance rate,\n   * default is `0.15`\n   */\n  @Input('pan-boundary') panBoundary: number | false = 0.15;\n\n  /** when show-num is bigger than 1, the first item align, defaulte is `center` */\n  @Input() align: 'left' | 'center' | 'right' = 'center';\n\n  /**\n   * disable when drag occur the child element will follow touch point.\n   * default is `false`\n   */\n  @Input('not-follow-pan') notDrag = false;\n\n  /**\n   * the event binding state for stop auto play when mourse moveover\n   */\n  @Input('mourse-enable') mourseEnable = false;\n  /** each auto play between time */\n  @Input('between-delay') delay = 8000;\n  /** auto play direction, default is `right`. */\n  @Input('autoplay-direction') direction: 'left' | 'right' = 'right';\n  /** how many number with each scroll, default is `1`. */\n  @Input('scroll-num') scrollNum = 1;\n  /** Could user scroll many item once, simulate with scrollbar, default is `false` */\n  @Input('drag-many') isDragMany = false;\n  /** Minimal velocity required before recognizing, unit is in px per ms, default `0.3` */\n  @Input('swipe-velocity') swipeVelocity = 0.3;\n\n  /**\n   * switch show number with custom logic like css @media (min-width: `number`px)\n   */\n  @Input() breakpoint: NgxHmCarouselBreakPointUp[] = [];\n\n  /** disable drag event with touch and mouse pan moving, default is `false` */\n  @Input('disable-drag')\n  get disableDrag() {\n    return this._disableDrag;\n  }\n  set disableDrag(value) {\n    if (this.rootElm) {\n      if (this._disableDrag !== value) {\n        if (value) {\n          this.destoryHammer();\n        } else {\n          this.hammer = this.bindHammer();\n        }\n      }\n    }\n    this._disableDrag = value;\n  }\n\n  /** is the carousel can move infinite */\n  @Input('infinite')\n  get infinite() {\n    return this._infinite;\n  }\n  set infinite(value) {\n    this._infinite = value;\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.addStyle(ref.rootNodes[0], {\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n    });\n  }\n\n  /** auto play speed */\n  @Input('autoplay-speed')\n  get speed() {\n    return this.speedChange.value;\n  }\n  set speed(value) {\n    this._zone.runOutsideAngular(() => {\n      this.speedChange.next(value);\n    });\n  }\n\n  /**\n   * how many number items to show once, default is `1`\n   * set `auto` to using `[breakpoint]` set value.\n   */\n  @Input('show-num')\n  get showNum() {\n    return this._showNum;\n  }\n  set showNum(value: number | 'auto') {\n    if (value === 'auto') {\n      this.isAutoNum = true;\n    } else {\n      this._showNum = +value;\n      if (this.rootElm) {\n        this.setViewWidth();\n        this.reSetAlignDistance();\n      }\n    }\n  }\n\n  /** carousel auto play confing */\n  @Input('autoplay')\n  get autoplay() {\n    return this._autoplay;\n  }\n  set autoplay(value) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.elms) {\n        this.progressWidth = 0;\n        if (value) {\n          this._zone.runOutsideAngular(() => {\n            this.doNextSub$ = this.doNext.subscribe();\n          });\n        } else {\n          if (this.doNextSub$) {\n            this.doNextSub$.unsubscribe();\n          }\n        }\n      }\n    }\n    this._autoplay = value;\n    // if set autoplay, then the infinite is true\n    if (value) {\n      this._tmpInfinite = this.infinite;\n      this.infinite = true;\n    } else {\n      this.infinite = this._tmpInfinite;\n    }\n  }\n\n  get currentIndex() {\n    return this._currentIndex;\n  }\n  set currentIndex(value) {\n    // if now index if not equale to save index, do someting\n    if (this.currentIndex !== value) {\n      // if the value is not contain with the boundary not handler\n      if (!this.runLoop && !(0 <= value && value <= this.itemElms.length - 1)) {\n        return;\n      }\n      this._currentIndex = value;\n      if (this.elms) {\n        if (this.autoplay && !this.isFromAuto) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n            this.callRestart();\n          });\n        }\n        this.drawView(this.currentIndex, this.hasInitWriteValue);\n        if (this.isDragMany) {\n          this.hasInitWriteValue = true;\n        }\n      }\n      if (\n        0 <= this.currentIndex &&\n        this.currentIndex <= this.itemElms.length - 1\n      ) {\n        this._zone.run(() => {\n          this.onChange(this.currentIndex);\n          this._cd.detectChanges();\n        });\n      }\n    }\n    this.isFromAuto = false;\n  }\n\n  get progressWidth() {\n    return this._porgressWidth;\n  }\n  set progressWidth(value) {\n    if (this.progressElm !== undefined && this.autoplay) {\n      this._porgressWidth = value;\n      this._renderer.setStyle(\n        (this.progressContainerElm.nativeElement as HTMLElement).children[0],\n        'width',\n        `${this.progressWidth}%`,\n      );\n    }\n  }\n\n  get grabbing() {\n    return this._grabbing;\n  }\n  set grabbing(value: boolean) {\n    if (this._grabbing !== value) {\n      // console.log(value);\n      this._zone.run(() => {\n        this._grabbing = value;\n        if (value) {\n          this._renderer.addClass(this.containerElm, 'grabbing');\n        } else {\n          this.panCount = 0;\n          this.callRestart();\n          this._renderer.removeClass(this.containerElm, 'grabbing');\n        }\n        this._cd.detectChanges();\n      });\n    }\n  }\n\n  // using for check mouse or touchend\n  leaveObs$ = merge(\n    fromEvent(this._document, 'mouseup'),\n    fromEvent(this._document, 'touchend'),\n  ).pipe(\n    tap((e: Event) => {\n      this.grabbing = false;\n      e.stopPropagation();\n      e.preventDefault();\n    }),\n  );\n\n  private set left(value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}px)`,\n      );\n    } else {\n      this._renderer.setStyle(\n        this.containerElm,\n        'transform',\n        `translateX(${value}%)`,\n      );\n    }\n  }\n\n  private get maxRightIndex() {\n    let addIndex = 0;\n    switch (this.align) {\n      case 'left':\n        addIndex = 0;\n        break;\n      case 'center':\n        addIndex = (this.showNum as number) - 1;\n        break;\n      case 'right':\n        addIndex = (this.showNum as number) - 1;\n        break;\n    }\n    return this.itemElms.length - 1 - this._showNum + 1 + addIndex;\n  }\n\n  private get runLoop() {\n    return this.autoplay || this.infinite;\n  }\n  private get lengthOne() {\n    return this.itemElms.length === 1;\n  }\n\n  private get rootElmWidth() {\n    return isPlatformBrowser(this.platformId)\n      ? this.rootElm.getBoundingClientRect().width\n      : 100;\n  }\n\n  private set containerElmWidth(value: number) {\n    this.setStyle(this.containerElm, 'width', value);\n  }\n\n  private isFromAuto = true;\n  private isAutoNum = false;\n  private mouseOnContainer = false;\n  private alignDistance = 0;\n  private elmWidth = 0;\n\n  private rootElm: HTMLElement;\n  private containerElm: HTMLElement;\n\n  private elms: Array<HTMLElement>;\n  private infiniteElmRefs: Array<EmbeddedViewRef<any>> = [];\n\n  private hammer: HammerManager;\n\n  private saveTimeOut: Subscription;\n  private doNextSub$: Subscription;\n  private doNext: Observable<any>;\n\n  private restart = new BehaviorSubject<any>(null);\n  private speedChange = new BehaviorSubject(5000);\n  private stopEvent = new Subject<any>();\n  private destroy$ = new Subject<any>();\n\n  private _porgressWidth = 0;\n  private _currentIndex = 0;\n  private _showNum = 1;\n  private _autoplay = false;\n  private _infinite = false;\n  private _tmpInfinite = false;\n  private _grabbing = false;\n  private _disableDrag = false;\n\n  private panCount = 0;\n\n  // this variable use for check the init value is write with ngModel,\n  // when init first, not set with animation\n  private hasInitWriteValue = false;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) private _document,\n    private _renderer: Renderer2,\n    private _zone: NgZone,\n    private _cd: ChangeDetectorRef,\n  ) {}\n\n  ngAfterViewInit() {\n    this.rootElm = this.container.nativeElement;\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\n\n    this.init();\n\n    forkJoin([\n      this.bindClick(),\n      // when item changed, remove old hammer binding, and reset width\n      this.itemElms.changes.pipe(\n        // detectChanges to change view dots\n        tap(() => {\n          if (this.currentIndex > this.itemElms.length - 1) {\n            // i can't pass the changedetection check, only the way to using timeout. :(\n            setTimeout(() => {\n              this.currentIndex = this.itemElms.length - 1;\n            }, 0);\n          }\n          this.destroy();\n          this.removeInfiniteElm();\n          this.init();\n          this.progressWidth = 0;\n        }),\n        tap(() => this._cd.detectChanges()),\n      ),\n      resizeObservable(this.rootElm, () => this.containerResize()),\n    ])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n    this.destroy$.next();\n    this.destroy$.unsubscribe();\n  }\n\n  writeValue(value: any) {\n    if (value || value === 0) {\n      this.currentIndex = value;\n      this.hasInitWriteValue = true;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => any) {\n    this.onTouched = fn;\n  }\n  private onChange = (_: any) => {};\n  private onTouched = () => {};\n\n  private init() {\n    this.initVariable();\n    this.setViewWidth(true);\n    this.reSetAlignDistance();\n    if (!this.disableDrag) {\n      this.hammer = this.bindHammer();\n    }\n    this.drawView(this.currentIndex, false);\n    if (isPlatformBrowser(this.platformId) && this.runLoop) {\n      this.addInfiniteElm();\n    }\n  }\n\n  private destroy() {\n    this.destoryHammer();\n\n    if (this.autoplay) {\n      this.doNextSub$.unsubscribe();\n    }\n  }\n\n  private destoryHammer() {\n    if (this.hammer) {\n      this.hammer.destroy();\n    }\n  }\n\n  private addInfiniteElm() {\n    for (let i = 1; i <= this.showNum; i++) {\n      const elm = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[this.itemElms.length - i],\n          index: this.itemElms.length - i,\n        },\n      );\n      this.addStyle(elm.rootNodes[0], {\n        position: 'absolute',\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        transform: `translateX(-${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm.rootNodes[0], 'width', this.elmWidth);\n\n      const elm2 = this.infiniteContainer.createEmbeddedView(\n        this.contentContent,\n        {\n          $implicit: this.data[i - 1],\n          index: i - 1,\n        },\n      );\n      this.addStyle(elm2.rootNodes[0], {\n        // boxShadow: `0 0 0 5000px rgba(200, 75, 75, 0.5) inset`,\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        transform: `translateX(${100 * i}%)`,\n        visibility: this.runLoop ? 'visible' : 'hidden',\n      });\n      this.setStyle(elm2.rootNodes[0], 'width', this.elmWidth);\n\n      elm.detectChanges();\n      elm2.detectChanges();\n\n      this.infiniteElmRefs.push(elm);\n      this.infiniteElmRefs.push(elm2);\n    }\n  }\n\n  private removeInfiniteElm() {\n    this.infiniteElmRefs.forEach((a) => {\n      a.detach();\n      a.destroy();\n    });\n    if (this.infiniteContainer) {\n      this.infiniteContainer.clear();\n    }\n    this.infiniteElmRefs = [];\n  }\n\n  private containerResize() {\n    this.setViewWidth();\n    this.reSetAlignDistance();\n\n    // 因為不能滑了，所以要回到第一個，以確保全部都有顯示\n    if (this.align !== 'center' && this.showNum >= this.elms.length) {\n      this.currentIndex = 0;\n    }\n    this.drawView(this.currentIndex, false);\n  }\n\n  private initVariable() {\n    this._zone.runOutsideAngular(() => {\n      this.elms = this.itemElms.toArray().map((x) => x.nativeElement);\n\n      let startEvent = this.restart.asObservable();\n      let stopEvent = this.stopEvent.asObservable();\n      if (this.mourseEnable) {\n        startEvent = merge(\n          startEvent,\n          fromEvent(this.containerElm, 'mouseleave').pipe(\n            // when leave, we should reverse grabbing state to set the mouseOn state,\n            // because when the grabbing, the mask will on, and it will occur leave again\n            filter(() => !this.grabbing),\n            tap(() => (this.mouseOnContainer = false)),\n          ),\n        );\n        stopEvent = merge(\n          stopEvent,\n          fromEvent(this.containerElm, 'mouseover').pipe(\n            tap(() => (this.mouseOnContainer = true)),\n          ),\n        );\n      }\n\n      this.doNext = startEvent.pipe(\n        // not using debounceTime, it will stop mourseover event detect, will cause mourse-enable error\n        // debounceTime(this.delay),\n        switchMap(() => this.speedChange),\n        switchMap(() =>\n          timer(this.delay).pipe(\n            switchMap(() => this.runProgress(20)),\n            tap(() => {\n              this.isFromAuto = true;\n              // console.log('next');\n              if (this.direction === 'left') {\n                this.currentIndex -= this.scrollNum;\n              } else {\n                this.currentIndex += this.scrollNum;\n              }\n            }),\n            takeUntil(stopEvent.pipe(tap(() => (this.progressWidth = 0)))),\n          ),\n        ),\n      );\n\n      if (this.autoplay) {\n        this.doNextSub$ = this.doNext.subscribe();\n      }\n    });\n  }\n\n  private reSetAlignDistance() {\n    switch (this.align) {\n      case 'center':\n        this.alignDistance = (this.rootElmWidth - this.elmWidth) / 2;\n        break;\n      case 'left':\n        this.alignDistance = 0;\n        break;\n      case 'right':\n        this.alignDistance = this.rootElmWidth - this.elmWidth;\n        break;\n    }\n  }\n\n  private setViewWidth(isInit?: boolean) {\n    if (this.isAutoNum) {\n      this._showNum = this.getAutoNum();\n    }\n    this._renderer.addClass(this.containerElm, 'grab');\n    if (isInit) {\n      // remain one elm height\n      this._renderer.addClass(\n        this.containerElm,\n        'ngx-hm-carousel-display-npwrap',\n      );\n    }\n    this.elmWidth = this.rootElmWidth / this._showNum;\n\n    this._renderer.removeClass(\n      this.containerElm,\n      'ngx-hm-carousel-display-npwrap',\n    );\n\n    this.containerElmWidth = this.elmWidth * this.elms.length;\n\n    this._renderer.setStyle(this.containerElm, 'position', 'relative');\n\n    this.infiniteElmRefs.forEach((ref) => {\n      this.setStyle(ref.rootNodes[0], 'width', this.elmWidth);\n    });\n    this.elms.forEach((elm: HTMLElement) => {\n      this.setStyle(elm, 'width', this.elmWidth);\n    });\n  }\n\n  private bindHammer() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return null;\n    }\n    return this._zone.runOutsideAngular(() => {\n      const hm = new Hammer.Manager(this.containerElm);\n\n      const pan = new Hammer.Pan({\n        direction: Hammer.DIRECTION_HORIZONTAL,\n        threshold: 0,\n      });\n\n      hm.add(pan);\n\n      hm.on('panleft panright panend pancancel', (e: HammerInput) => {\n        // console.log(e.type);\n\n        if (this.lengthOne) {\n          return;\n        }\n\n        this.removeContainerTransition();\n\n        if (this.autoplay) {\n          this._zone.runOutsideAngular(() => {\n            this.stopEvent.next();\n          });\n        }\n\n        switch (e.type) {\n          case 'panleft':\n          case 'panright':\n            this.panCount++;\n            // only when panmove more than two times, set move\n            if (this.panCount < 2) {\n              return;\n            }\n\n            this.grabbing = true;\n            // When show-num is bigger than length, stop hammer\n            if (this.align !== 'center' && this.showNum >= this.elms.length) {\n              this.hammer.stop(true);\n              return;\n            }\n            // Slow down at the first and last pane.\n            if (!this.runLoop && this.outOfBound(e.type)) {\n              e.deltaX *= 0.2;\n            }\n\n            if (!this.notDrag) {\n              this.left =\n                -this.currentIndex * this.elmWidth +\n                this.alignDistance +\n                e.deltaX;\n            }\n\n            // // if not dragmany, when bigger than half\n            if (!this.isDragMany) {\n              if (Math.abs(e.deltaX) > this.elmWidth * 0.5) {\n                if (e.deltaX > 0) {\n                  this.currentIndex -= this.scrollNum;\n                } else {\n                  this.currentIndex += this.scrollNum;\n                }\n                this.hammer.stop(true);\n                return;\n              }\n            }\n            break;\n          case 'pancancel':\n            this.drawView(this.currentIndex);\n            break;\n\n          case 'panend':\n            // if boundary more than rate\n            if (\n              this.panBoundary !== false &&\n              Math.abs(e.deltaX) > this.elmWidth * this.panBoundary\n            ) {\n              const moveNum = this.isDragMany\n                ? Math.ceil(Math.abs(e.deltaX) / this.elmWidth)\n                : this.scrollNum;\n\n              const prevIndex = this.currentIndex - moveNum;\n              const nextIndex = this.currentIndex + moveNum;\n\n              // if right\n              if (e.deltaX > 0) {\n                this.goPrev(prevIndex);\n                // left\n              } else {\n                this.goNext(nextIndex);\n              }\n              break;\n            } else if (e.velocityX < -this.swipeVelocity && e.distance > 10) {\n              this.goNext(this.currentIndex + this.scrollNum);\n            } else if (e.velocityX > this.swipeVelocity && e.distance > 10) {\n              this.goPrev(this.currentIndex - this.scrollNum);\n            } else {\n              this.drawView(this.currentIndex);\n            }\n            break;\n        }\n      });\n\n      return hm;\n    });\n  }\n\n  private goPrev(prevIndex: number) {\n    if (!this.runLoop && prevIndex < 0) {\n      prevIndex = 0;\n      this.drawView(0);\n    }\n    this.currentIndex = prevIndex;\n  }\n\n  private goNext(nextIndex: number) {\n    if (!this.runLoop && nextIndex > this.maxRightIndex) {\n      nextIndex = this.maxRightIndex;\n      this.drawView(nextIndex);\n    }\n    this.currentIndex = nextIndex;\n  }\n\n  private bindClick() {\n    if (this.btnNext && this.btnPrev) {\n      return forkJoin([\n        fromEvent(this.btnNext.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex++),\n        ),\n        fromEvent(this.btnPrev.nativeElement, 'click').pipe(\n          tap(() => this.currentIndex--),\n        ),\n      ]);\n    }\n    return of(null);\n  }\n\n  private callRestart() {\n    // if that is autoplay\n    // if that mouse is not on container( only mouse-enable is true, the state maybe true)\n    // if now is grabbing, skip this restart, using grabbing change restart\n    if (this.autoplay && !this.mouseOnContainer && !this.grabbing) {\n      this._zone.runOutsideAngular(() => {\n        this.restart.next(null);\n      });\n    }\n  }\n\n  private drawView(\n    index: number,\n    isAnimation = true,\n    isFromAuto = this.isFromAuto,\n  ) {\n    // move element only on length is more than 1\n    if (this.elms.length > 1) {\n      this.removeContainerTransition();\n      this.left = -(index * this.elmWidth - this.alignDistance);\n\n      if (isAnimation) {\n        if (isFromAuto) {\n          this._renderer.addClass(this.containerElm, this.aniClassAuto);\n        } else {\n          this._renderer.addClass(this.containerElm, this.aniClass);\n        }\n        // if infinite move to next index with timeout\n        this.infiniteHandler(index);\n      }\n    } else {\n      this.left = this.alignDistance;\n    }\n  }\n\n  private removeContainerTransition() {\n    this._renderer.removeClass(this.containerElm, this.aniClass);\n    this._renderer.removeClass(this.containerElm, this.aniClassAuto);\n  }\n\n  private infiniteHandler(index: number) {\n    if (this.runLoop) {\n      let state = 0;\n      state = index < 0 ? -1 : state;\n      state = index > this.itemElms.length - 1 ? 1 : state;\n\n      // index = index % this._showNum;\n      if (state !== 0) {\n        switch (state) {\n          case -1:\n            this._currentIndex =\n              (this.itemElms.length + index) % this.itemElms.length;\n            break;\n          case 1:\n            this._currentIndex = index % this.itemElms.length;\n            break;\n        }\n\n        const isFromAuto = this.isFromAuto;\n        if (this.saveTimeOut) {\n          this.saveTimeOut.unsubscribe();\n        }\n\n        this.saveTimeOut = timer(this.aniTime)\n          .pipe(\n            switchMap(() => {\n              // if it is any loop carousel, the next event need wait the timeout complete\n              if (this.aniTime === this.speed) {\n                this.removeContainerTransition();\n                this.left =\n                  -((this._currentIndex - state) * this.elmWidth) +\n                  this.alignDistance;\n                return timer(50).pipe(\n                  tap(() => {\n                    this.drawView(\n                      this.currentIndex,\n                      this.hasInitWriteValue,\n                      isFromAuto,\n                    );\n                  }),\n                );\n              } else {\n                this.drawView(this.currentIndex, false);\n              }\n              return of(null);\n            }),\n            takeUntil(this.stopEvent),\n          )\n          .subscribe();\n      }\n    }\n  }\n\n  private outOfBound(type) {\n    switch (type) {\n      case 'panleft':\n        return this.currentIndex >= this.maxRightIndex;\n      case 'panright':\n        return this.currentIndex <= 0;\n    }\n  }\n\n  private runProgress(betweenTime): Observable<any> {\n    return this._zone.runOutsideAngular(() => {\n      const howTimes = this.speed / betweenTime;\n      const everyIncrease = (100 / this.speed) * betweenTime;\n      return interval(betweenTime).pipe(\n        tap((t) => {\n          this.progressWidth = (t % howTimes) * everyIncrease;\n        }),\n        bufferCount(Math.round(howTimes), 0),\n      );\n    });\n  }\n\n  private getAutoNum() {\n    const currWidth = this.rootElmWidth;\n    // check user has had set breakpoint\n    if (this.breakpoint.length > 0) {\n      // get the last bigget point\n      const now = this.breakpoint.find((b) => {\n        return b.width >= currWidth;\n      });\n      // if find value, it is current width\n      if (now) {\n        return now.number;\n      }\n      return this.breakpoint[this.breakpoint.length - 1].number;\n    }\n\n    // system init show number\n    const initNum = 3;\n    // 610\n    if (currWidth > 300) {\n      return Math.floor(initNum + currWidth / 200);\n    }\n    return initNum;\n  }\n\n  private addStyle(\n    elm: HTMLElement,\n    style: { [key: string]: string | number },\n  ) {\n    if (style) {\n      Object.keys(style).forEach((key) => {\n        const value = style[key];\n        this._renderer.setStyle(elm, key, value);\n      });\n    }\n  }\n\n  private setStyle(elm: HTMLElement, style: string, value: number) {\n    if (isPlatformBrowser(this.platformId)) {\n      this._renderer.setStyle(elm, style, `${value}px`);\n    } else {\n      this._renderer.setStyle(elm, style, `${value}%`);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxHmCarouselDynamicDirective } from './ngx-hm-carousel-dynamic.directive';\nimport { NgxHmCarouselComponent } from './ngx-hm-carousel.component';\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n  exports: [\n    NgxHmCarouselComponent,\n    NgxHmCarouselDynamicDirective,\n    NgxHmCarouselItemDirective,\n  ],\n})\nexport class NgxHmCarouselModule {}\n"]}