import { __decorate, __metadata } from "tslib";
import { Directive, Input, OnInit, TemplateRef, ViewContainerRef, } from '@angular/core';
// TODO: ssr problem should not hide on ssr
// TODO: show number change should recaculate is show and init show number
var NgxHmCarouselDynamicDirective = /** @class */ (function () {
    function NgxHmCarouselDynamicDirective(_view, _template) {
        this._view = _view;
        this._template = _template;
        this.show = 1;
        this.compelete = false;
        this._view.clear();
    }
    Object.defineProperty(NgxHmCarouselDynamicDirective.prototype, "currentI", {
        set: function (value) {
            if (!this.compelete) {
                var nextI = value + this.show;
                var prevI = value - this.show;
                if (this.index === 0 ||
                    this.index === this.length - 1 ||
                    this.index === nextI ||
                    this.index === prevI ||
                    this.index === value) {
                    this._view.createEmbeddedView(this._template);
                    this.compelete = true;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    NgxHmCarouselDynamicDirective.prototype.ngOnInit = function () { };
    NgxHmCarouselDynamicDirective.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: TemplateRef }
    ]; };
    __decorate([
        Input('ngxHmCarouselDynamic'),
        __metadata("design:type", Number)
    ], NgxHmCarouselDynamicDirective.prototype, "index", void 0);
    __decorate([
        Input('ngxHmCarouselDynamicLength'),
        __metadata("design:type", Number)
    ], NgxHmCarouselDynamicDirective.prototype, "length", void 0);
    __decorate([
        Input('ngxHmCarouselDynamicShow'),
        __metadata("design:type", Object)
    ], NgxHmCarouselDynamicDirective.prototype, "show", void 0);
    __decorate([
        Input('ngxHmCarouselDynamicIndex'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], NgxHmCarouselDynamicDirective.prototype, "currentI", null);
    NgxHmCarouselDynamicDirective = __decorate([
        Directive({
            selector: '[ngxHmCarouselDynamic]',
        }),
        __metadata("design:paramtypes", [ViewContainerRef,
            TemplateRef])
    ], NgxHmCarouselDynamicDirective);
    return NgxHmCarouselDynamicDirective;
}());
export { NgxHmCarouselDynamicDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWhtLWNhcm91c2VsLWR5bmFtaWMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWhtLWNhcm91c2VsLyIsInNvdXJjZXMiOlsibGliL25neC1obS1jYXJvdXNlbC1keW5hbWljLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFdBQVcsRUFDWCxnQkFBZ0IsR0FDakIsTUFBTSxlQUFlLENBQUM7QUFFdkIsMkNBQTJDO0FBQzNDLDBFQUEwRTtBQUkxRTtJQXdCRSx1Q0FDVSxLQUF1QixFQUN2QixTQUEyQjtRQUQzQixVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2QixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQXZCRixTQUFJLEdBQUcsQ0FBQyxDQUFDO1FBbUJwQyxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBTXhCLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQXhCRCxzQkFBSSxtREFBUTthQUFaLFVBQWEsS0FBYTtZQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDbkIsSUFBTSxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQ2hDLElBQU0sS0FBSyxHQUFHLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO2dCQUNoQyxJQUNFLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQztvQkFDaEIsSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUM7b0JBQzlCLElBQUksQ0FBQyxLQUFLLEtBQUssS0FBSztvQkFDcEIsSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLO29CQUNwQixJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssRUFDcEI7b0JBQ0EsSUFBSSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2lCQUN2QjthQUNGO1FBQ0gsQ0FBQzs7O09BQUE7SUFXRCxnREFBUSxHQUFSLGNBQWtCLENBQUM7O2dCQU5GLGdCQUFnQjtnQkFDWixXQUFXOztJQXpCRDtRQUE5QixLQUFLLENBQUMsc0JBQXNCLENBQUM7O2dFQUFlO0lBQ1I7UUFBcEMsS0FBSyxDQUFDLDRCQUE0QixDQUFDOztpRUFBZ0I7SUFDakI7UUFBbEMsS0FBSyxDQUFDLDBCQUEwQixDQUFDOzsrREFBVTtJQUU1QztRQURDLEtBQUssQ0FBQywyQkFBMkIsQ0FBQzs7O2lFQWdCbEM7SUFwQlUsNkJBQTZCO1FBSHpDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSx3QkFBd0I7U0FDbkMsQ0FBQzt5Q0EwQmlCLGdCQUFnQjtZQUNaLFdBQVc7T0ExQnJCLDZCQUE2QixDQWdDekM7SUFBRCxvQ0FBQztDQUFBLEFBaENELElBZ0NDO1NBaENZLDZCQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgSW5wdXQsXG4gIE9uSW5pdCxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDb250YWluZXJSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyBUT0RPOiBzc3IgcHJvYmxlbSBzaG91bGQgbm90IGhpZGUgb24gc3NyXG4vLyBUT0RPOiBzaG93IG51bWJlciBjaGFuZ2Ugc2hvdWxkIHJlY2FjdWxhdGUgaXMgc2hvdyBhbmQgaW5pdCBzaG93IG51bWJlclxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25neEhtQ2Fyb3VzZWxEeW5hbWljXScsXG59KVxuZXhwb3J0IGNsYXNzIE5neEhtQ2Fyb3VzZWxEeW5hbWljRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCduZ3hIbUNhcm91c2VsRHluYW1pYycpIGluZGV4OiBudW1iZXI7XG4gIEBJbnB1dCgnbmd4SG1DYXJvdXNlbER5bmFtaWNMZW5ndGgnKSBsZW5ndGg6IG51bWJlcjtcbiAgQElucHV0KCduZ3hIbUNhcm91c2VsRHluYW1pY1Nob3cnKSBzaG93ID0gMTtcbiAgQElucHV0KCduZ3hIbUNhcm91c2VsRHluYW1pY0luZGV4JylcbiAgc2V0IGN1cnJlbnRJKHZhbHVlOiBudW1iZXIpIHtcbiAgICBpZiAoIXRoaXMuY29tcGVsZXRlKSB7XG4gICAgICBjb25zdCBuZXh0SSA9IHZhbHVlICsgdGhpcy5zaG93O1xuICAgICAgY29uc3QgcHJldkkgPSB2YWx1ZSAtIHRoaXMuc2hvdztcbiAgICAgIGlmIChcbiAgICAgICAgdGhpcy5pbmRleCA9PT0gMCB8fFxuICAgICAgICB0aGlzLmluZGV4ID09PSB0aGlzLmxlbmd0aCAtIDEgfHxcbiAgICAgICAgdGhpcy5pbmRleCA9PT0gbmV4dEkgfHxcbiAgICAgICAgdGhpcy5pbmRleCA9PT0gcHJldkkgfHxcbiAgICAgICAgdGhpcy5pbmRleCA9PT0gdmFsdWVcbiAgICAgICkge1xuICAgICAgICB0aGlzLl92aWV3LmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLl90ZW1wbGF0ZSk7XG4gICAgICAgIHRoaXMuY29tcGVsZXRlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNvbXBlbGV0ZSA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgX3ZpZXc6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBfdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4sXG4gICkge1xuICAgIHRoaXMuX3ZpZXcuY2xlYXIoKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge31cbn1cbiJdfQ==